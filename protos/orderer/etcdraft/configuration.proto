/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "github.com/mcc-github/blockchain/protos/orderer/etcdraft";
option java_package = "org.mcc-github.blockchain.protos.orderer.etcdraft";

package etcdraft;

// Metadata is serialized and set as the value of ConsensusType.Metadata in
// a channel configuration when the ConsensusType.Type is set "etcdraft".
message Metadata {
	repeated Consenter consenters = 1;
	Options options = 2;
}

// Consenter represents a consenting node (i.e. replica).
message Consenter {
	string host = 1;
	uint32 port = 2;
	bytes client_tls_cert = 3;
	bytes server_tls_cert = 4;
}

// Options to be specified for all the etcd/raft nodes. These can be modified on a
// per-channel basis.
message Options {
	uint64 tick_interval = 1; // specified in miliseconds
	uint32 election_tick = 2;
	uint32 heartbeat_tick = 3;
	uint32 max_inflight_msgs = 4;
	uint64 max_size_per_msg = 5;
}
